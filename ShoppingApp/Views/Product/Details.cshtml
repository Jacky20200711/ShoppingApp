@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Http
@model X.PagedList.IPagedList<ShoppingApp.Models.ProductAndComment>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject Wangkanai.Detection.Services.IDetectionService DetectionService
@{
    ViewData["Title"] = "產品資訊與留言";

    bool isMobile = @DetectionService.Device.Type == Wangkanai.Detection.Models.Device.Mobile;

    string ImgWidth = isMobile ? "max-width:100%;" : "width:336px;";
}

<h1>產品資訊</h1>

<div>
    <div><img style="@ImgWidth height: 360px; " src="@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.DefaultImageURL)" /></div>
    <hr />
    <div>
        <div>
            <strong>上架日期</strong>&nbsp;&nbsp;
            <span>@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.PublishDate)</span>
        </div>
        <div>
            <strong>產品名稱</strong>&nbsp;&nbsp;
            <span>@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.Name)</span>
        </div>
        <div>
            <strong>產品價格</strong>&nbsp;&nbsp;
            <span>$@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.Price)</span>
        </div>
        <div>
            <strong>產品庫存</strong>&nbsp;&nbsp;
            <span>@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.Quantity)</span>
        </div>
        <div style="width:100%;white-space:normal;word-wrap:break-word;word-break:break-all;">
            <strong>產品描述</strong>&nbsp;&nbsp;
            <span>@Html.DisplayFor(model => model.FirstOrDefault().TheProduct.Description)</span>
        </div>
    </div>
</div>

<br>
<h1>訪客留言</h1>
<div>
    <hr />
    <dl class="row">
        @*顯示留言*@
        @if (Model.FirstOrDefault().TheComment != null)
        {
            foreach (var pc in Model)
            {
                <dt class="col-sm-2">
                    @pc.TheComment.UserName<span style="margin-left:4px;">:</span>
                </dt>
                <dd class="col-sm-10">
                    @pc.TheComment.Content  ( @pc.TheComment.CreateTime )
                </dd>
            }
        }
    </dl>
</div>
<div>
    @if (string.IsNullOrEmpty(User.Identity.Name))
    {
        <p>登入會員後才能留言!</p>
    }
    else
    {
        @*輸入留言*@
        @using (Html.BeginForm("AddComment", "Product", FormMethod.Post, new { onsubmit = "return checkLen();" }))
        {
            if (TempData["ProductDetail"] == null)
            {
                <span style="display:none;">@Html.TextBox("id", Model.FirstOrDefault().TheProduct.Id)</span>
                @Html.TextBox("comment", null, new { id = "PostComment", @class = "text-field" })
                <input type="submit" value="留言" class="btn btn-primary" />
            }
            else
            {
                <p style="color:red;">@TempData["ProductDetail"]</p>
            }
        }
    }
    @*返回之前的購物分頁並刷新，避免表單資料消失*@
    @{
        int? TryGetPage = HttpContextAccessor.HttpContext.Session.GetInt32("returnPage");
        int page = TryGetPage != null ? (int)TryGetPage : 1;
    }
    @Html.ActionLink("回購物頁面", "ShowProducts", "Product", new { page = @page })
</div>
<br>

@*在Url.Action新增一個參數，用來返回產品的ID*@
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Details", new { id = Model.FirstOrDefault().TheProduct.Id, page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        LinkToPreviousPageFormat = "上一頁",
        LinkToNextPageFormat = "下一頁"
    })

<script>
    //將捲軸自動滾到底以方便查看留言
    window.scrollTo(0, document.body.scrollHeight);

    //檢查留言框的內容長度
    function checkLen() {

        var commentLen = document.getElementById("PostComment").value.length;

        if (commentLen < 2 || commentLen > 100) {
            alert("留言長度必須為2~100字!");
            return false;
        }
        else {
            return true;
        }
    }
</script>